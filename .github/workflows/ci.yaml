name: CI

# Run on any push or any PR (both for any branch)
on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always # Pretty colors
jobs:
  check_fmt:
    name: Cargo fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Cargo fmt
        run: ./ci.sh check_fmt

  check_docs:
    name: Cargo docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: dtolnay/rust-toolchain@nightly
      - name: Cargo docs
        run: ./ci.sh check_docs

  lint:
    name: Lint (clippy)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Lint (clippy)
        run: ./ci.sh lint

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Build
        run: ./ci.sh build

  # TODO: remove unless crate is no_std
  # build_nostd:
  #   name: Build (nostd)
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: dtolnay/rust-toolchain@stable
  #       with:
  #         targets: thumbv6m-none-eabi
  #     - name: Build (nostd)
  #       run: ./ci.sh build_nostd

  run_tests_stable:
    name: Tests (stable)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Tests (stable)
        run: ./ci.sh run_tests_stable

  run_tests_beta:
    name: Tests (beta)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@beta
      - name: Tests (beta)
        run: ./ci.sh run_tests_beta

  run_tests_msrv:
    name: Tests (MSRV)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.85.0
      - name: Tests (MSRV)
        run: ./ci.sh run_tests_msrv

  run_tests_leak_sanitizer:
    name: Tests (leak sanitizer)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - name: Tests (leak sanitizer)
        run: ./ci.sh run_tests_leak_sanitizer

  # TODO: remove if unsafe_code is forbidden
  run_tests_miri:
    name: Tests (MIRI)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: miri
      - name: Tests (MIRI)
        run: ./ci.sh run_tests_miri